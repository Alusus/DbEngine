import "Constraints";
module DataType
{
    class Data
    {

        def FConstrants :  Constraints.FiledConstraints;
        def MySqlString : String;
        def SqliteString : String;
        def PgSqlString : String ;
        def Type : String ;
        def IntValue:int;
        def IsIntValue:bool=0;
        def FloatValue:float;
        def IsFloatValue:bool=0;
        def CharValue:char;
        def IsCharValue:bool=0;
        def StringValue:String;
        def IsStringValue:bool=0;
        def DataBaseType:int=0;  //0 for mysql 1 for sqlite and 2 for pgsql
        handler this.getDataString() :String
        {
            if this.DataBaseType==0
                {return this.MySqlString;}
            else if this.DataBaseType==1
                {return this.SqliteString;}
            else if this.DataBaseType==2
                {return this.PgSqlString;}
            else
                {return this.PgSqlString;}
        }
        handler this.setCostType(Type : String) 
        {
           this.Type=Type;
        }
        handler this.getCostType() :String
        {
            return this.Type;
        }
        handler this.getFConstrants() :Constraints.FiledConstraints
        {
            return this.FConstrants;
        }
        handler this.getIntValue() :int
        {
            return this.IntValue;

        }
        handler this.setIntValue (IntValue : int) 
        {
            this.IntValue=IntValue;
        }
        handler this.getCharValue() :char
        {
            return this.CharValue;

        }
        handler this.setCharValue (CharValue : char) 
        {
            this.CharValue=CharValue;
        }
        handler this.getStringValue() :String
        {
            return this.StringValue;

        }
        handler this.setStringValue (StringValue : String) 
        {
            this.StringValue=StringValue;
        }
        handler this.getFloatValue() :float
        {
            return this.StringValue;

        }
        handler this.setFloatValue (FloatValue : float) 
        {
            this.FloatValue=FloatValue;
        }
    }
    class Integer
    {
        @injection def data:Data;	
        this.MySqlString ="INT";
        this.SqliteString  ="INTEGER";
        this.PgSqlString  ="integer";
        this.IsIntValue=1;
    }
    class BigInteger
    {	
        @injection def data:Data;
        this.MySqlString : String="BIGINT"; 
        this.PgSqlString : String ="bigint";
        this.SqliteString : String ="INTEGER";
        this.IsIntValue=1;
    }
    class SmallInteger
    {
        @injection def data:Data;	
        this.MySqlString : String="SMALLINT";         
        this.PgSqlString : String ="smallint";
        this.SqliteString : String ="INTEGER";
        this.IsIntValue=1;


    }
    class TinyInteger
    {
        @injection def data:Data;	
        this.MySqlString : String="TINYINT";
        this.PgSqlString : String ="smallint";
        this.SqliteString : String ="INTEGER";
        this.IsIntValue=1;
    }
    class Real
    {
        @injection def data:Data;	
        this.MySqlString : String="REAL";         
        this.PgSqlString : String ="real";
        this.SqliteString : String ="REAL";
        this.IsFloatValue=1;
    }
    class Float
    {
        @injection def data:Data;	
        this.MySqlString : String="FLOAT";
        this.PgSqlString : String ="double precision";
        this.SqliteString : String ="REAL";
        this.IsFloatValue=1;
    }
    class Decimal
    {
        @injection def data:Data;	
        this.MySqlString : String="DECIMAL";         
        this.PgSqlString : String ="integer";
        this.SqliteString : String="DECIMAL";
        this.IsFloatValue=1;
    }
    class Xml
    {
        @injection def data:Data;	
        this.MySqlString : String="XML";
        this.PgSqlString : String ="";         
        this.SqliteString : String ="";
        this.IsStringValue=1;  
    }
  class VarChar
    {
        @injection def data:Data;
        def length : int=50;	
        this.MySqlString ="VARCHAR";
        this.PgSqlString ="varchar";
        this.SqliteString  ="VARCHAR";
        this.IsStringValue=1;
        handler this~init(length: int) 
        {
            this.length=length;
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";

        }
        handler this~init() 
        {
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";
        }
    }
    class Char
    {
        @injection def data:Data;
        def length : int=1;	
        this.MySqlString : String="CHAR";
        this.PgSqlString : String="char";
        this.SqliteString : String ="CHAR";
        this.IsCharValue=1;
        handler this~init(length: int) 
        {
            this.length=length;
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";

        }
        handler this~init() 
        {
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";
        }         

    }
    class Text
    {
        @injection def data:Data;
        def length : int=50;	
        this.MySqlString : String="TEXT";
        this.PgSqlString : String="TEXT";
        this.SqliteString : String ="TEXT";
        this.IsStringValue=1;
        handler this~init(length: int) 
        {
            this.length=length;
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";

        }
        handler this~init() 
        {
            this.MySqlString=this.MySqlString + "(" + this.length + ")";
            this.PgSqlString=this.PgSqlString + "(" + this.length + ")";
            this.SqliteString=this.SqliteString + "(" + this.length + ")";
        }        

    }
    class Dates
    {
        @injection def data:Data;	
        this.MySqlString : String="Date";
        this.PgSqlString : String="date";
        this.MySqlString : String="Date"; 
        this.IsStringValue=1;
    }  
}