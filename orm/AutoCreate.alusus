import "Data";
import "AutoBuild";
use DataType;
use Srl;
use Core.Basic;
use Core.Data;
use Core.Data.Ast;
use DbConBuilder;
def TioSrdRef: alias SrdRef[Core.Basic.TiObject];
@tableName["MyTable"]
class Cars
{
@defult["10"]
 @notnull
@pk
def Id :Integer;
@s
@defult["30"]
def i:String;


def n:String;

@defult["'sleman'" ]
def Name :VarChar;

}
class cars
{
    def id : int;
    def name : String;
    def price : float;
    def ss :DbConBuilder;





        AutoBuild.getDataType[String("cars") , cars~ast ]


}



def Tname : String;
Tname="Cars";
def DbName : String="testdb";

def UserName : String="user12";

def Password : String="Qwerty231@#!";

def server : String="localhost";

def DbsCon :  DbConBuilder.DbConBuilder;

DbsCon.setDBName(DbName);

DbsCon.setUserName(UserName);

DbsCon.setPassword(Password);

DbsCon.setServer(server);
DbsCon.setDbConType(0);
def a : String;
a=String("Cars");

def c : cars;
def d: Array[cars]
c.setDbCon(DbsCon);
def sw2 : int=2;

d=cars.where[not (price $ (sw2  , 7)) and  id > 10 ].getData();
def k: int=0;
def s: String="";

Console.print(s);
Console.print("\n");
Console.print("\n");
for k=0 , k<d.getLength() , k=k+1
{
Console.print(d(k).id);
Console.print("  ");
Console.print(d(k).name);
Console.print("  ");
Console.print(d(k).price);
Console.print("\n");
}
c.id=900;
c.name=String("'SlemanCar'");
c.price=2500000.50;
c.saveData();
//
c.id=900;
c.name=String("'Sleman ford Car'");
c.price=2500000.50;

cars.where[id=40 ]

cars.updateData[price=20 ].getData();
cars._MyClass.updateData()
Console.print(cars._MyClass._Update+"\n");

    def firstName: String("Mohammed");
    def position: String("Engineer");

Console.print(cars._MyClass._Where+"\n");

func test {
    def firstName: String("Mohammed");
    def position: String("Engineer");
    //def query: String = where[name == firstName && (pos == position || pos == "Lawyer")];
    //Console.print("%s\n", query.buf);
}
test();
